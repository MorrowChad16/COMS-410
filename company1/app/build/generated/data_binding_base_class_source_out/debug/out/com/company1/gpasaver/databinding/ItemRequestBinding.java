// Generated by data binding compiler. Do not edit!
package com.company1.gpasaver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.company1.gpasaver.R;
import com.company1.gpasaver.ui.home.UserViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemRequestBinding extends ViewDataBinding {
  @NonNull
  public final Button btnAccept;

  @NonNull
  public final Button btnReject;

  @NonNull
  public final ImageView imgRequester;

  @NonNull
  public final LinearLayout itemTransaction;

  @NonNull
  public final TextView labelName;

  @NonNull
  public final LinearLayout layoutButtons;

  @Bindable
  protected UserViewModel mUserViewModel;

  protected ItemRequestBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button btnAccept, Button btnReject, ImageView imgRequester, LinearLayout itemTransaction,
      TextView labelName, LinearLayout layoutButtons) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnAccept = btnAccept;
    this.btnReject = btnReject;
    this.imgRequester = imgRequester;
    this.itemTransaction = itemTransaction;
    this.labelName = labelName;
    this.layoutButtons = layoutButtons;
  }

  public abstract void setUserViewModel(@Nullable UserViewModel userViewModel);

  @Nullable
  public UserViewModel getUserViewModel() {
    return mUserViewModel;
  }

  @NonNull
  public static ItemRequestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_request, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemRequestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemRequestBinding>inflateInternal(inflater, R.layout.item_request, root, attachToRoot, component);
  }

  @NonNull
  public static ItemRequestBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_request, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemRequestBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemRequestBinding>inflateInternal(inflater, R.layout.item_request, null, false, component);
  }

  public static ItemRequestBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemRequestBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemRequestBinding)bind(component, view, R.layout.item_request);
  }
}
